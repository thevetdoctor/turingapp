{"version":3,"sources":["Task.js","Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["Task","props","useState","checked","setChecked","className","type","onChange","name","Tasks","items","map","item","_id","App","useEffect","a","axios","method","url","res","console","log","data","getItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAGe,SAASA,EAAKC,GAAQ,IAAD,EACAC,oBAAS,GADT,mBACxBC,EADwB,KACfC,EADe,KAEhC,OACI,sBAAKC,UAAS,eAAUF,EAAU,SAAW,IAA7C,UACI,uBACAE,UAAU,gBACVC,KAAK,WACLH,QAASA,EACTI,SAAU,kBAAMH,GAAYD,MAE3BF,EAAMO,KACP,sBAAMH,UAAU,cAAhB,kBCXG,SAASI,EAAMR,GAC1B,OACI,gCACI,0CACAA,EAAMS,MAAMC,KAAI,SAACC,GAAD,OACd,8BACE,cAAC,EAAD,CAEIJ,KAAMI,EAAKJ,MADNI,EAAKC,a,qBCwBfC,MA5Bf,WAAgB,IAAD,EACeZ,mBAAS,CACnC,CAAEW,IAAK,EAAGL,KAAM,YAChB,CAAEK,IAAK,EAAGL,KAAM,YAChB,CAAEK,IAAK,EAAGL,KAAM,YAChB,CAAEK,IAAK,EAAGL,KAAM,aALL,mBACLE,EADK,KAoBb,OApBa,KAQfK,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEACCC,IAAM,CACtBC,OAAQ,MACRC,IAAK,yBAHU,OACXC,EADW,OAKjBC,QAAQC,IAAIF,EAAIG,MALC,2CAAH,qDAOdC,KACD,IAEDH,QAAQC,IAAIZ,GAEV,sBAAKL,UAAU,MAAf,UACE,qDACA,cAACI,EAAD,CAAOC,MAAOA,QCjBLe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3d0b127c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport \"./Task.css\";\n\nexport default function Task(props) {\n    const [ checked, setChecked ] = useState(false);\n    return (\n        <div className={`task ${checked ? \"strike\" : \"\"}`}>\n            <input \n            className=\"task_checkbox\"\n            type=\"checkbox\"\n            checked={checked}\n            onChange={() => setChecked(!checked)}\n             />\n            {props.name}\n            <span className=\"task_delete\">X</span>\n        </div>\n    )\n}\n","import React from 'react'\nimport Task from './Task'\n\nexport default function Tasks(props) {\n    return (\n        <div>\n            <h3>My Tasks</h3>\n           {props.items.map((item) => (\n              <div>\n                <Task \n                    key={item._id}\n                    name={item.name}\n                /> \n              </div>\n            ))}\n        </div>\n    )\n}\n\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Tasks from './Tasks';\nimport axios from 'axios';\n\nfunction App() {\n  const [ items, setItems ] = useState([\n    { _id: 1, name: 'swimming' },\n    { _id: 2, name: 'swimming' },\n    { _id: 3, name: 'swimming' },\n    { _id: 4, name: 'singing' }\n  ]);\n\nuseEffect(() => {\n    const getItems = async () => {\n    const res = await axios({\n      method: 'GET',\n      url: 'localhost:5000/tasks'\n    });\n    console.log(res.data);\n  }\n    getItems();\n}, []);\n\n  console.log(items);\n  return (\n    <div className=\"App\">\n      <h2>Turing Task Manager</h2>\n      <Tasks items={items} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}